# .gitlab-ci.yml
stages:
  - deploy

deploy_be:
  stage: deploy
  # BE/develop 브랜치에 푸시될 때만 동작
  only:
    - /^BE\/develop$/

  # CI/CD 런너에서 사용하는 이미지
  image: alpine:latest

  before_script:
    # 1) ssh-agent 실행
    - apk add --no-cache openssh git # Alpine에 ssh/git 설치
    - eval $(ssh-agent -s)

    # 2) 변수에 저장된 프라이빗 키를 ssh-agent에 추가
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    # 3) known_hosts 세팅 (호스트 키 검증)
    - mkdir -p ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts

  script:
    # 4) EC2에 접속해서 배포 스크립트 실행
    - |
      ssh ubuntu@i13a404.p.ssafy.io << 'EOF'
        set -e
        cd ~/DuckOn-BE                      # BE 코드가 있는 경로
        git fetch origin BE/develop
        git reset --hard origin/BE/develop  # 강제 동기화
        docker build --no-cache -t duckonback:latest .
        docker rm -f duckon-app || true
        docker run -d \
          --name duckon-app \
          -p 8080:8080 \
          -e SPRING_DATASOURCE_URL="jdbc:mysql://127.0.0.1:3306/duckon" \
          -e SPRING_DATASOURCE_USERNAME="duckon" \
          -e SPRING_DATASOURCE_PASSWORD="secret" \
          -e spring.redis.host="127.0.0.1" \
          -e spring.redis.port="6379" \
          -e JWT_SECRET_KEY="$JWT_SECRET_KEY" \
          duckonback:latest
      EOF
